{
  "sksl": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform float time;\nuniform vec2 resolution;\n\nvec4 fragColor;\n\nvec3 FLT_flutter_local_mod289(vec3 x)\n{\n    return x - (floor(x * 0.00346020772121846675872802734375) * 289.0);\n}\n\nvec4 FLT_flutter_local_mod289(vec4 x)\n{\n    return x - (floor(x * 0.00346020772121846675872802734375) * 289.0);\n}\n\nvec4 FLT_flutter_local_permute(vec4 x)\n{\n    vec4 param = ((x * 34.0) + vec4(1.0)) * x;\n    return FLT_flutter_local_mod289(param);\n}\n\nvec4 FLT_flutter_local_taylorInvSqrt(vec4 r)\n{\n    return vec4(1.792842864990234375) - (r * 0.8537347316741943359375);\n}\n\nfloat FLT_flutter_local_snoise(vec3 v)\n{\n    vec3 i = floor(v + vec3(dot(v, vec3(0.3333333432674407958984375))));\n    vec3 x0 = (v - i) + vec3(dot(i, vec3(0.16666667163372039794921875)));\n    vec3 g = step(x0.yzx, x0);\n    vec3 l = vec3(1.0) - g;\n    vec3 i1 = min(g, l.zxy);\n    vec3 i2 = max(g, l.zxy);\n    vec3 x1 = (x0 - i1) + vec3(0.16666667163372039794921875);\n    vec3 x2 = (x0 - i2) + vec3(0.3333333432674407958984375);\n    vec3 x3 = x0 - vec3(0.5);\n    vec3 param = i;\n    i = FLT_flutter_local_mod289(param);\n    vec4 param_1 = vec4(i.z) + vec4(0.0, i1.z, i2.z, 1.0);\n    vec4 param_2 = (FLT_flutter_local_permute(param_1) + vec4(i.y)) + vec4(0.0, i1.y, i2.y, 1.0);\n    vec4 param_3 = (FLT_flutter_local_permute(param_2) + vec4(i.x)) + vec4(0.0, i1.x, i2.x, 1.0);\n    vec4 p = FLT_flutter_local_permute(param_3);\n    float n_ = 0.14285714924335479736328125;\n    vec3 ns = (vec3(2.0, 0.5, 1.0) * n_) - vec3(0.0, 1.0, 0.0);\n    vec4 j = p - (floor((p * ns.z) * ns.z) * 49.0);\n    vec4 x_ = floor(j * ns.z);\n    vec4 y_ = floor(j - (x_ * 7.0));\n    vec4 x = (x_ * ns.x) + ns.yyyy;\n    vec4 y = (y_ * ns.x) + ns.yyyy;\n    vec4 h = (vec4(1.0) - abs(x)) - abs(y);\n    vec4 b0 = vec4(x.xy, y.xy);\n    vec4 b1 = vec4(x.zw, y.zw);\n    vec4 s0 = (floor(b0) * 2.0) + vec4(1.0);\n    vec4 s1 = (floor(b1) * 2.0) + vec4(1.0);\n    vec4 sh = -step(h, vec4(0.0));\n    vec4 a0 = b0.xzyw + (s0.xzyw * sh.xxyy);\n    vec4 a1 = b1.xzyw + (s1.xzyw * sh.zzww);\n    vec3 p0 = vec3(a0.xy, h.x);\n    vec3 p1 = vec3(a0.zw, h.y);\n    vec3 p2 = vec3(a1.xy, h.z);\n    vec3 p3 = vec3(a1.zw, h.w);\n    vec4 param_4 = vec4(dot(p0, p0), dot(p1, p1), dot(p2, p2), dot(p3, p3));\n    vec4 norm = FLT_flutter_local_taylorInvSqrt(param_4);\n    p0 *= norm.x;\n    p1 *= norm.y;\n    p2 *= norm.z;\n    p3 *= norm.w;\n    vec4 m = max(vec4(0.60000002384185791015625) - vec4(dot(x0, x0), dot(x1, x1), dot(x2, x2), dot(x3, x3)), vec4(0.0));\n    m *= m;\n    return 42.0 * dot(m * m, vec4(dot(p0, x0), dot(p1, x1), dot(p2, x2), dot(p3, x3)));\n}\n\nvec3 FLT_flutter_local_normal(vec3 v, float delta)\n{\n    vec3 param = v + vec3(delta, 0.0, 0.0);\n    vec3 param_1 = v - vec3(delta, 0.0, 0.0);\n    vec3 param_2 = v + vec3(0.0, delta, 0.0);\n    vec3 param_3 = v - vec3(0.0, delta, 0.0);\n    vec2 coefficient = vec2(FLT_flutter_local_snoise(param) - FLT_flutter_local_snoise(param_1), FLT_flutter_local_snoise(param_2) - FLT_flutter_local_snoise(param_3)) / vec2(delta);\n    coefficient *= 0.300000011920928955078125;\n    vec3 req = vec3(-coefficient.x, -coefficient.y, 1.0);\n    req /= vec3(length(req));\n    return req;\n}\n\nvoid FLT_main()\n{\n    vec2 uv = (flutter_FragCoord.xy / vec2(min(resolution.x, resolution.y))) * 0.25;\n    vec3 param_4 = vec3(uv, time);\n    float param_5 = 0.00999999977648258209228515625;\n    vec3 p = FLT_flutter_local_normal(param_4, param_5);\n    p = (p + vec3(1.0)) * 0.5;\n    fragColor = vec4(p, 1.0);\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
  "stage": 1,
  "target_platform": 2,
  "uniforms": [
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 0,
      "name": "time",
      "rows": 1,
      "type": 10
    },
    {
      "array_elements": 0,
      "bit_width": 32,
      "columns": 1,
      "location": 1,
      "name": "resolution",
      "rows": 2,
      "type": 10
    }
  ]
}